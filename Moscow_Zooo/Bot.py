import telebot
import re
from telebot import types
from config import TOKEN, QuestionsAboutAnimals, totem_info, program_info

bot = telebot.TeleBot(TOKEN)


@bot.message_handler(commands=['start'])
def start(message):
    photo = open('MZoo-logo-hor-universal-rus-preview-RGB.jpg', 'rb')
    bot.send_photo(message.chat.id, photo, caption=f'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, {message.chat.username}! –í—ã –ø–æ–ø–∞–ª –Ω–∞ –≤–∏–∫—Ç–æ—Ä–∏–Ω—É, —Å–≤—è–∑–∞–Ω–Ω—É—é —Å –ú–æ—Å–∫–æ–≤—Å–∫–∏–º –∑–æ–æ–ø–∞—Ä–∫–æ–º, \
–Ω–∞ —Ç–µ–º—É "–ö–∞–∫–æ–µ —É –≤–∞—Å —Ç–æ—Ç–µ–º–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ?". \n\n–ì–æ—Ç–æ–≤—ã? –¢–æ–≥–¥–∞ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ ‚Äì "–ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç".')
    button_start(message)


@bot.message_handler(commands=['button'])
def button_start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    item1 = types.KeyboardButton("–ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç")
    markup.add(item1)
    bot.send_message(message.chat.id, '–í–æ—Ç —Ç–∞–º  ‚¨áÔ∏è', reply_markup=markup)


@bot.message_handler(func=lambda message: message.text.lower() == '–Ω–∞—á–∞—Ç—å —Ç–µ—Å—Ç' or message.text.lower() == '—Å–≤—è–∑–∞—Ç—å—Å—è —Å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º –∑–æ–æ–ø–∞—Ä–∫–∞' or message.text.lower() == '—Å—ã–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞' or message.text.lower() == '–∑–∞–∫–æ–Ω—á–∏—Ç—å –∏–≥—Ä—É' or message.text.lower() == '–ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç –º–æ—Å–∫–æ–≤—Å–∫–æ–≥–æ –∑–æ–æ–ø–∞—Ä–∫–∞' or message.text.lower() == '—Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ –º–Ω–µ –æ –ø—Ä–æ–≥—Ä–∞–º–º–µ –æ–ø–µ–∫–∏')
def handle_text(message):
    try:
        if message.text.lower() == '–Ω–∞—á–∞—Ç—å —Ç–µ—Å—Ç' or message.text.lower() == '—Å—ã–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞':
            ask_question(message)
        elif message.text.lower() == '—Å–≤—è–∑–∞—Ç—å—Å—è —Å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º –∑–æ–æ–ø–∞—Ä–∫–∞':
            contact_zoo_staff(message)
        elif message.text.lower() == '–ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç –º–æ—Å–∫–æ–≤—Å–∫–æ–≥–æ –∑–æ–æ–ø–∞—Ä–∫–∞':
            MoskowZooSite(message)
        elif message.text.lower() == '–∑–∞–∫–æ–Ω—á–∏—Ç—å –∏–≥—Ä—É':
            end_game(message)
        elif message.text.lower() == '—Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ –º–Ω–µ –æ –ø—Ä–æ–≥—Ä–∞–º–º–µ –æ–ø–µ–∫–∏':
            guardianship_program(message)
    except InputException as e:
        bot.reply_to(message, f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: \n{e}")


def contact_zoo_staff(message):
    keyboard = types.InlineKeyboardMarkup()
    url_button = types.InlineKeyboardButton(text="–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç –º–æ—Å–∫–æ–≤—Å–∫–æ–≥–æ –∑–æ–æ–ø–∞—Ä–∫–∞", url="https://moscowzoo.ru/contacts")
    keyboard.add(url_button)
    bot.send_message(message.chat.id, """–î–ª—è —Å–≤—è–∑–∞—Ç—å—Å—è —Å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º –∑–æ–æ–ø–∞—Ä–∫–∞:
    –î–ª—è —Å–ø—Ä–∞–≤–æ–∫
     +7 (499) 252-29-51
     
    –ó–∞–∫–∞–∑ —ç–∫—Å–∫—É—Ä—Å–∏–π
    +7 (499) 255-53-75
    education@moscowzoo.ru

    –î–ª—è –±–æ–ª—à–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ –Ω–∞—à —Å–∞–π—Ç‚¨áÔ∏è
    """, reply_markup=keyboard)


def output_question_and_answers(message, k):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
    buttons = []
    for var in list(QuestionsAboutAnimals.items())[k][1]:
        buttons.append(types.KeyboardButton(text=var))
    keyboard.add(*buttons)

    return keyboard


def ask_question(message: types.Message, k=-2, counts=None):
    if counts is None:
        counts = {'1': 0, '2': 0, '3': 0, '4': 0}
    if k != len(QuestionsAboutAnimals) - 2:
        k += 1
        kb = output_question_and_answers(message, k)
        msg = bot.send_message(message.chat.id, text=list(QuestionsAboutAnimals.items())[k][0], reply_markup=kb)
        bot.register_next_step_handler(msg, process_answer, k, counts)
    else:
        bot.send_message(message.chat.id, text='–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω! ü•≥\n\n–ò–∏–∏–∏, –í–∞—à–µ —Ç–æ—Ç–µ–º–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ...', reply_markup=types.ReplyKeyboardRemove())
        calculation_results(counts, message)


@bot.message_handler()
def process_answer(message: types.Message, k, counts):
    try:
        if re.search(r'^([1-4]\.\s)', message.text):
            counts[message.text[0]] += 1
            ask_question(message, k, counts)
        else:
            raise InputException("‚Äì –ù–∞–∂–∏–º–∞–π—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ, –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –¥–∞—Ç—å –æ—Ç–≤–µ—Ç!")
    except InputException as e:
        bot.reply_to(message, f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: \n{e}")
        ask_question(message, k-1, counts)

    print(counts)


def calculation_results(counts, message):
    max_count = max(counts.values())
    max_categories = [cat for cat, count in counts.items() if count == max_count]

    if len(max_categories) == 1:
        bot.send_message(message.chat.id, totem_info[str(max_categories[0])])
        bot.send_sticker(message.chat.id, list(totem_info.values())[int(max_categories[0]) - 1][1])
        final_choice(message)
    else:
        bot.send_message(message.chat.id, totem_info[tuple(sorted(max_categories))])
        bot.send_sticker(message.chat.id, totem_info[tuple(sorted(max_categories))][1])
        final_choice(message)


def final_choice(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)

    button1 = types.KeyboardButton("–°–≤—è–∑–∞—Ç—å—Å—è —Å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º –∑–æ–æ–ø–∞—Ä–∫–∞")
    button2 = types.KeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç –ú–æ—Å–∫–æ–≤—Å–∫–æ–≥–æ –ó–æ–æ–ø–∞—Ä–∫–∞")
    button3 = types.KeyboardButton("–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –º–Ω–µ –æ –ø—Ä–æ–≥—Ä–∞–º–º–µ –æ–ø–µ–∫–∏")
    button4 = types.KeyboardButton("–°—ã–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞")
    button5 = types.KeyboardButton("–ó–∞–∫–æ–Ω—á–∏—Ç—å –∏–≥—Ä—É")

    markup.add(button1)
    markup.add(button2)
    markup.add(button3)
    markup.add(button4)
    markup.add(button5)

    bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ, –Ω–∞–∂–∞–≤ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ‚¨áÔ∏è', reply_markup=markup)


def MoskowZooSite(message):
    keyboard = types.InlineKeyboardMarkup()
    url_button = types.InlineKeyboardButton(text="–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç –º–æ—Å–∫–æ–≤—Å–∫–æ–≥–æ –∑–æ–æ–ø–∞—Ä–∫–∞", url="https://moscowzoo.ru")
    keyboard.add(url_button)
    bot.send_message(message.chat.id, "‚Üì –í—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç –∑–æ–æ–ø–∞—Ä–∫–∞, –Ω–∞–∂–∞–≤ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ:", reply_markup=keyboard)


@bot.message_handler()
def guardianship_program(message):
    photo2 = open('program_info.jpeg', 'rb')
    bot.send_photo(message.chat.id, photo2)
    bot.send_message(message.chat.id, program_info)


def end_game(message):
    bot.send_message(message.chat.id, "–û—Ç–ª–∏—á–Ω–æ —Å—ã–≥—Ä–∞–ª–∏! \n\n –ü–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç –∑–æ–æ–ø–∞—Ä–∫–∞, –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–æ–ª—å—à–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∂–∏–≤–æ—Ç–Ω—ã—Ö –∏ —ç–∫—Å–∫—É—Ä—Å–∏—è—Ö –≤ –Ω–∞—à–µ–º –∑–æ–æ–ø–∞—Ä–∫–µ, –ø–æ —Å—Å—ã–ª–∫–µ:\nhttps://moscowzoo.ru")
    bot.stop_bot()


if __name__ == '__main__':
    bot.infinity_polling()
